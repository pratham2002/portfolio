{"version":3,"sources":["constant.js","views/Dashboard/landingpage.js","views/AboutMe/aboutme.js","components/RFCard/index.js","views/Projects/index.js","components/CustomGrid/index.js","views/Resume/resume.js","route.js","App.js","serviceWorker.js","index.js"],"names":["constant","dashboard","avatar","banner","skills","socialAccounts","icon","link","about","resume","contactMe","LandingPage","react_default","a","createElement","style","width","margin","lib","className","col","src","alt","toString","map","_ref","index","key","href","target","rel","aria-hidden","AboutMe","height","paddingTop","fontSize","fontFamily","RFCard","props","shadow","card","cardTitle","body","cardText","border","acctionButtons","action","colored","cardMenu","name","projects","React","minWidth","color","background","AngularJS","NodeJS","JavaScript","Projects","_useState","useState","_useState2","Object","slicedToArray","activeTab","setActiveTab","onChange","tabId","ripple","Fragment","projectCard","components_RFCard","CustomGrid","keys","grids","grid","react","year","description","Experience","Education","Resume","textAlign","paddinTop","borderTop","components_CustomGrid","Main","Switch","Route","exact","path","component","Dashboard","AboutMePage","ProjectsPage","ResumePage","App","title","Link","to","textColor","scroll","route","Boolean","window","location","hostname","match","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2984666b.chunk.js","sourcesContent":["export default {\n  dashboard: {\n    avatar:\n      \"https://cdn1.iconfinder.com/data/icons/data-science-1-1/512/20-512.png\",\n    banner: \"Full Stack Developer\",\n    skills: [\"JavaScript\", \" HTML/CSS\", \" React\", \" NodeJS\", \" Express\"],\n    socialAccounts: [\n      { icon: \"fa fa-github-square\", link: \"https://github.com/riteshf\" },\n      {\n        icon: \"fa fa-linkedin-square\",\n        link: \"https://www.linkedin.com/in/riteshfirodiya/\",\n      },\n      {\n        icon: \"fa fa-facebook-square\",\n        link: \"https://www.facebook.com/ritesh.firodiya.58\",\n      },\n    ],\n  },\n  about: {},\n  resume: {},\n  contactMe: {},\n};\n","import React from \"react\";\nimport \"./style.css\";\nimport { Grid, Cell } from \"react-mdl\";\n\n// constants\nimport constant from \"../../constant\";\n\nconst LandingPage = () => (\n  <div style={{ width: \"100%\", margin: \"auto\" }}>\n    <Grid className=\"landing-grid\">\n      <Cell col={3}>\n        <img\n          src={constant.dashboard.avatar}\n          alt=\"img-avatar\"\n          className=\"img-avatar\"\n        />\n      </Cell>\n      <Cell col={9}>\n        <div className=\"banner-text\">\n          <h1>{constant.dashboard.banner}</h1>\n          <hr />\n          <p>{constant.dashboard.skills.toString()}</p>\n          <div className=\"social-links\">\n            {constant.dashboard.socialAccounts.map(({ icon, link }, index) => (\n              <a\n                key={index}\n                href={link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className={icon} aria-hidden=\"true\" />\n              </a>\n            ))}\n          </div>\n        </div>\n      </Cell>\n    </Grid>\n  </div>\n);\n\nexport default LandingPage;\n","import React from \"react\";\nimport { Grid, Cell, List, ListItem, ListItemContent } from \"react-mdl\";\n\nimport \"./style.css\";\n\nconst AboutMe = () => (\n  <div className=\"contactme-body\">\n    <Grid className=\"contactme-grid\">\n      <Cell col={6}>\n        <h2>Ritesh Firodiya</h2>\n        <img src=\"Ritesh.jpg\" alt=\"avatar\" style={{ height: \"250px\" }} />\n        <p style={{ width: \"75%\", margin: \"auto\", paddingTop: \"1em\" }}>\n          A Passionate Web Developer, interested in all the shit in this world\n          and having a desire to explore every corner of the world.\n        </p>\n      </Cell>\n      <Cell col={6}>\n        <h2>Contact Me</h2>\n        <hr />\n        <div className=\"contactme-list\">\n          <List>\n            <ListItem>\n              <ListItemContent\n                style={{ fontSize: \"30px\", fontFamily: \"Anton\" }}\n              >\n                <i className=\"fa fa-phone-square\" aria-hidden=\"true\" />\n                (+91) 9226737797\n              </ListItemContent>\n            </ListItem>\n            <ListItem>\n              <ListItemContent\n                style={{ fontSize: \"30px\", fontFamily: \"Anton\" }}\n              >\n                <i className=\"fa fa-envelope\" aria-hidden=\"true\" />\n                firodiya.ritesh@gmail.com\n              </ListItemContent>\n            </ListItem>\n            <ListItem>\n              <ListItemContent\n                style={{ fontSize: \"30px\", fontFamily: \"Anton\" }}\n              >\n                <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                riteshfirodiya\n              </ListItemContent>\n            </ListItem>\n          </List>\n        </div>\n      </Cell>\n    </Grid>\n  </div>\n);\n\nexport default AboutMe;\n","import React from 'react';\nimport { Card, CardTitle, CardText, CardActions, CardMenu, Button, IconButton } from 'react-mdl';\n\nconst RFCard = (props) => (\n    <Card shadow={5} style={props.card.style}>\n        <CardTitle style={props.card.cardTitle.style}>\n            {props.card.cardTitle.body}</CardTitle>\n        <CardText>\n            {props.card.cardText.body}\n        </CardText>\n        <CardActions border>\n            {props.card.acctionButtons.map(action => (\n                <Button colored>{action}</Button>\n            ))}\n        </CardActions>\n        <CardMenu style={props.card.cardMenu.style}>\n            <IconButton name=\"share\" />\n        </CardMenu>\n    </Card>\n);\n\nexport default RFCard;","import React, { useState } from \"react\";\nimport { Tabs, Tab, Grid, Cell } from \"react-mdl\";\nimport RFCard from \"../../components/RFCard\";\nimport \"./style.css\";\n\nconst projects = {\n  React: [\n    {\n      style: { minWidth: \"450\", margin: \"auto\" },\n      cardTitle: {\n        style: {\n          color: \"#fff\",\n          height: \"176px\",\n          background:\n            \"url(https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXQWR1h2Dzvwrwd4Fmb39hAp1HrgDVz8SPGn0TBaQxgmiIE4jM) center/ cover\",\n        },\n        body: \"My Portfolio Site\",\n      },\n      cardText: {\n        body: \"A portfolio project created in react.\",\n      },\n      acctionButtons: [\"Github\"],\n      cardMenu: {\n        style: { color: \"#fff\" },\n      },\n    },\n  ],\n  AngularJS: [],\n  NodeJS: [],\n  JavaScript: [],\n};\n\nfunction Projects() {\n  const [activeTab, setActiveTab] = useState(0);\n\n  function toggleCategories() {\n    if (activeTab === 0) {\n      return (\n        <>\n          {projects[\"React\"].map((projectCard) => (\n            <div className=\"projects-grid\">\n              <RFCard card={projectCard} />\n            </div>\n          ))}\n        </>\n      );\n    } else if (activeTab === 1) {\n      return (\n        <>\n          {projects[\"JavaScript\"].map((projectCard) => (\n            <div className=\"projects-grid\">\n              <RFCard card={projectCard} />\n            </div>\n          ))}\n        </>\n      );\n    } else if (activeTab === 2) {\n      return (\n        <>\n          {projects[\"NodeJS\"].map((projectCard) => (\n            <div className=\"projects-grid\">\n              <RFCard card={projectCard} />\n            </div>\n          ))}\n        </>\n      );\n    } else if (activeTab === 3) {\n      return (\n        <>\n          {projects[\"AngularJS\"].map((projectCard) => (\n            <div className=\"projects-grid\">\n              <RFCard card={projectCard} />\n            </div>\n          ))}\n        </>\n      );\n    } else {\n      return (\n        <>\n          {projects[\"React\"].map((projectCard) => (\n            <div className=\"projects-grid\">\n              <RFCard card={projectCard} />\n            </div>\n          ))}\n        </>\n      );\n    }\n  }\n\n  return (\n    <div className=\"catagory-tabs\">\n      <Tabs\n        activeTab={activeTab}\n        onChange={(tabId) => setActiveTab(tabId)}\n        ripple\n      >\n        <Tab>React</Tab>\n        <Tab>JavaScript</Tab>\n        <Tab>NodeJS</Tab>\n        <Tab>AngularJS</Tab>\n      </Tabs>\n      <Grid>\n        <Cell col={12}>\n          <div className=\"content\">{toggleCategories()}</div>\n        </Cell>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Projects;\n","\nimport React, {Fragment} from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nconst CustomGrid = (props) => (\n    <>\n        {Object.keys(props.grids).map(key =>\n            <div key={key}>\n                <h2>{key}</h2>\n                <Grid>\n                    {props.grids[key].map(grid => (\n                        <Fragment key={grid.name}>\n                            <Cell col={3}>\n                                <h6>{grid.year}</h6>\n                            </Cell>\n                            <Cell col={9}>\n                                <h6>{grid.name}</h6>\n                                <p>{grid.description}</p>\n                            </Cell>\n                        </Fragment>\n                    ))}\n                </Grid>\n            </div>\n        )}\n    </>\n);\n\nexport default CustomGrid;\n","import React from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\n\nimport \"./style.css\";\nimport CustomGrid from \"../../components/CustomGrid\";\n\nconst grids = {\n  Experience: [\n    {\n      year: \"2017 - current\",\n      name: \"Confluxsys Private Limited, Pune\",\n      description: `A private orginization oriented towards building software products for security management,\n         with a small team of around 30+ members, helped me expand my horizon over professional and trending \n         technologies to build reliable solutions to adhere with customer needs.`,\n    },\n  ],\n  Education: [\n    {\n      year: \"2013 - 2017\",\n      name: `Pune Vidyarti Griha's College of Engineering and Technology, Pune`,\n      description: `A private orginization oriented towards building software products for security management,\n                with a small team of around 30+ members, helped me expand my horizon over professional and\n                trending technologies to build reliable solutions to adhere with customer needs.`,\n    },\n    {\n      year: \"2011 - 2013\",\n      name: \"Vishwakarma Institue of Technology, Pune\",\n      description: `Jr. College, where for the first time, I was introducted to HTML and CSS, and ended up rooting\n                me in web development industry.\n                A life full of adventure and awesome friends that always do the most craziest things you could imagine`,\n    },\n    {\n      year: \"2000 - 2011\",\n      name: \"Shri Sharda English Medium School, Ahmednaga\",\n      description: \"My School\",\n    },\n  ],\n};\n\nconst Resume = () => (\n  <div>\n    <Grid>\n      <Cell col={4}>\n        <div style={{ textAlign: \"center\" }}>\n          <img src=\"Ritesh.jpg\" alt=\"avatar\" style={{ height: \"200px\" }} />\n        </div>\n        <h2 style={{ paddinTop: \"2em\" }}>Ritesh Firodiya</h2>\n        <h4 style={{ color: \"grey\" }}>Programmer</h4>\n        <hr style={{ borderTop: \"3px solid #833fb2\", width: \"50%\" }} />\n        <p>\n          A Passionate Web Developer, interested in all the shit in this world\n          and having a desire to explore every corner of the world.\n        </p>\n        <hr style={{ borderTop: \"3px solid #833fb2\", width: \"50%\" }} />\n        <h5>Address</h5>\n        <p>\n          Flat No. 403, Shri Niwas, Vasant-Vastu, Maharshi Nagar, Pune,\n          Maharashtra, India\n        </p>\n        <h5>Phone</h5>\n        <p>(+91) 9226737797</p>\n        <h5>Email</h5>\n        <p>firodiya.ritesh@gmail.com</p>\n        <hr style={{ borderTop: \"3px solid #833fb2\", width: \"50%\" }} />\n      </Cell>\n      <Cell col={8} className=\"resume-right-col\">\n        <CustomGrid grids={grids} />\n      </Cell>\n    </Grid>\n  </div>\n);\n\nexport default Resume;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Dashboard from \"./views/Dashboard\";\nimport AboutMePage from \"./views/AboutMe\";\nimport ProjectsPage from \"./views/Projects\";\nimport ResumePage from \"./views/Resume\";\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Dashboard} />\n    <Route path=\"/aboutme\" component={AboutMePage} />\n    <Route path=\"/projects\" component={ProjectsPage} />\n    <Route path=\"/resume\" component={ResumePage} />\n  </Switch>\n);\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport Main from './route';\nimport { Link } from 'react-router-dom'\n\nimport { Layout, Header, Navigation, Content } from 'react-mdl';\n\n\nconst App = () => (\n  < div className=\"demo-big-content\" >\n    <Layout>\n      <Header className=\"header-color\" title={<Link to=\"/\" style={{textColor:'white'}}>Ritesh Firodiya </Link>} scroll>\n        <Navigation>\n          <Link to=\"/resume\">Resume</Link>\n          <Link to=\"/aboutme\">About Me</Link>\n          <Link to=\"/projects\">Projects</Link>\n        </Navigation>\n      </Header>\n      <Content>\n        <div className=\"page-content\" />\n        <Main />\n      </Content>\n    </Layout>\n  </div >\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}