{"version":3,"sources":["components/Dashboard/landingpage.js","components/AboutMe/aboutme.js","Views/RFCard/index.js","components/Projects/index.js","Views/CustomGrid/index.js","components/Resume/resume.js","route.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","react_default","a","createElement","style","width","margin","lib","className","col","src","alt","href","target","rel","aria-hidden","AboutMe","height","paddingTop","fontSize","fontFamily","RFCard","props","shadow","card","cardTitle","body","cardText","border","acctionButtons","map","action","colored","cardMenu","name","projects","React","minWidth","color","background","AngularJS","NodeJS","JavaScript","Projects","_useState","useState","_useState2","Object","slicedToArray","activeTab","setActiveTab","onChange","tabId","ripple","Fragment","projectCard","Views_RFCard","CustomGrid","keys","grids","key","grid","react","year","description","Experience","Education","Resume","textAlign","paddinTop","borderTop","Views_CustomGrid","Main","Switch","Route","exact","path","component","Dashboard","AboutMePage","ProjectsPage","ResumePage","App","title","Link","to","textColor","scroll","route","Boolean","window","location","hostname","match","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0b53eb3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nconst LandingPage = () => (\r\n    <div style={{ width: '100%', margin: 'auto' }}>\r\n        <Grid className=\"landing-grid\">\r\n            <Cell col={3}>\r\n                <img\r\n                    src=\"https://cdn1.iconfinder.com/data/icons/data-science-1-1/512/20-512.png\"\r\n                    alt=\"img-avatar\"\r\n                    className=\"img-avatar\"\r\n                />\r\n            </Cell>\r\n            <Cell col={9}>\r\n                <div className=\"banner-text\">\r\n                    <h1>Full Stack Web Developer</h1>\r\n                    <hr />\r\n                    <p>JavaScript | HTML/CSS | React | NodeJS | Express</p>\r\n                    <div className=\"social-links\">\r\n                        {/* Github  */}\r\n                        <a href=\"https://github.com/riteshf\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n                        </a>\r\n                        {/* LinkedIn */}\r\n                        <a href=\"https://www.linkedin.com/in/riteshfirodiya/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                        </a>\r\n                        {/* Facebook */}\r\n                        <a href=\"https://www.facebook.com/ritesh.firodiya.58\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fa fa-facebook-square\" aria-hidden=\"true\" />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </Cell>\r\n        </Grid>\r\n    </div>\r\n);\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport { Grid, Cell, List, ListItem, ListItemContent } from 'react-mdl';\r\n\r\nimport './style.css';\r\n\r\nconst AboutMe = () => (\r\n    <div className=\"contactme-body\">\r\n        <Grid className=\"contactme-grid\">\r\n            <Cell col={6}>\r\n                <h2>Ritesh Firodiya</h2>\r\n                <img\r\n                    src=\"https://cdn2.iconfinder.com/data/icons/avatar-2/512/Fred_man-512.png\"\r\n                    alt=\"avatar\"\r\n                    style={{ height: '250px' }}\r\n                />\r\n                <p style={{ width: '75%', margin: 'auto', paddingTop: '1em' }}>\r\n                    A Passionate Web Developer, interested in all the shit in this world and having a desire to explore every corner of the world.\r\n                    </p>\r\n            </Cell>\r\n            <Cell col={6}>\r\n                <h2>Contact Me</h2>\r\n                <hr />\r\n                <div className=\"contactme-list\">\r\n                    <List>\r\n                        <ListItem>\r\n                            <ListItemContent style={{ fontSize: '30px', fontFamily: 'Anton' }}>\r\n                                <i className=\"fa fa-phone-square\" aria-hidden=\"true\" />\r\n                                (+91) 9226737797\r\n                                </ListItemContent>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemContent style={{ fontSize: '30px', fontFamily: 'Anton' }}>\r\n                                <i className=\"fa fa-envelope\" aria-hidden=\"true\" />\r\n                                firodiya.ritesh@gmail.com\r\n                                </ListItemContent>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemContent style={{ fontSize: '30px', fontFamily: 'Anton' }}>\r\n                                <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                                riteshfirodiya\r\n                                </ListItemContent>\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n            </Cell>\r\n        </Grid>\r\n    </div >\r\n)\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport { Card, CardTitle, CardText, CardActions, CardMenu, Button, IconButton } from 'react-mdl';\r\n\r\nconst RFCard = (props) => (\r\n    <Card shadow={5} style={props.card.style}>\r\n        <CardTitle style={props.card.cardTitle.style}>\r\n            {props.card.cardTitle.body}</CardTitle>\r\n        <CardText>\r\n            {props.card.cardText.body}\r\n        </CardText>\r\n        <CardActions border>\r\n            {props.card.acctionButtons.map(action => (\r\n                <Button colored>{action}</Button>\r\n            ))}\r\n        </CardActions>\r\n        <CardMenu style={props.card.cardMenu.style}>\r\n            <IconButton name=\"share\" />\r\n        </CardMenu>\r\n    </Card>\r\n);\r\n\r\nexport default RFCard;","import React, { useState } from 'react';\r\nimport { Tabs, Tab, Grid, Cell } from 'react-mdl';\r\nimport RFCard from '../../Views/RFCard'\r\nimport './style.css';\r\n\r\nconst projects = {\r\n    'React': [\r\n        {\r\n            style: { minWidth: '450', margin: 'auto' },\r\n            cardTitle: {\r\n                style: { color: '#fff', height: '176px', background: 'url(https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXQWR1h2Dzvwrwd4Fmb39hAp1HrgDVz8SPGn0TBaQxgmiIE4jM) center/ cover' },\r\n                body: \"My Portfolio Site\"\r\n            },\r\n            cardText: {\r\n                \"body\": \"A portfolio project created in react.\"\r\n            },\r\n            acctionButtons: ['Github'],\r\n            cardMenu: {\r\n                style: { color: '#fff' }\r\n            }\r\n        }\r\n    ],\r\n    'AngularJS': [],\r\n    'NodeJS': [],\r\n    'JavaScript': []\r\n};\r\n\r\nfunction Projects() {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    function toggleCategories() {\r\n        if (activeTab === 0) {\r\n            return (\r\n                <>\r\n                    {projects['React'].map(projectCard =>\r\n                        <div className=\"projects-grid\">\r\n                            <RFCard card={projectCard} />\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )\r\n        } else if (activeTab === 1) {\r\n            return (\r\n                <>\r\n                    {projects['JavaScript'].map(projectCard =>\r\n                        <div className=\"projects-grid\">\r\n                            <RFCard card={projectCard} />\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )\r\n        } else if (activeTab === 2) {\r\n            return (\r\n                <>\r\n                    {projects['NodeJS'].map(projectCard =>\r\n                        <div className=\"projects-grid\">\r\n                            <RFCard card={projectCard} />\r\n                        </div>\r\n                    )}\r\n                </>)\r\n        } else if (activeTab === 3) {\r\n            return (\r\n                <>\r\n                    {projects['AngularJS'].map(projectCard =>\r\n                        <div className=\"projects-grid\">\r\n                            <RFCard card={projectCard} />\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                    {projects['React'].map(projectCard =>\r\n                        <div className=\"projects-grid\">\r\n                            <RFCard card={projectCard} />\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"catagory-tabs\">\r\n            <Tabs activeTab={activeTab} onChange={(tabId) => setActiveTab(tabId)} ripple>\r\n                <Tab>React</Tab>\r\n                <Tab>JavaScript</Tab>\r\n                <Tab>NodeJS</Tab>\r\n                <Tab>AngularJS</Tab>\r\n            </Tabs>\r\n            <Grid>\r\n                <Cell col={12}>\r\n                    <div className=\"content\">\r\n                        {toggleCategories()}\r\n                    </div>\r\n                </Cell>\r\n            </Grid>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Projects;","\r\nimport React, {Fragment} from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nconst CustomGrid = (props) => (\r\n    <>\r\n        {Object.keys(props.grids).map(key =>\r\n            <div key={key}>\r\n                <h2>{key}</h2>\r\n                <Grid>\r\n                    {props.grids[key].map(grid => (\r\n                        <Fragment key={grid.name}>\r\n                            <Cell col={3}>\r\n                                <h6>{grid.year}</h6>\r\n                            </Cell>\r\n                            <Cell col={9}>\r\n                                <h6>{grid.name}</h6>\r\n                                <p>{grid.description}</p>\r\n                            </Cell>\r\n                        </Fragment>\r\n                    ))}\r\n                </Grid>\r\n            </div>\r\n        )}\r\n    </>\r\n);\r\n\r\nexport default CustomGrid;\r\n","import React from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\n\r\nimport './style.css';\r\nimport CustomGrid from '../../Views/CustomGrid';\r\n\r\nconst grids = {\r\n    'Experience': [{\r\n        year: '2017 - current',\r\n        name: 'Confluxsys Private Limited, Pune',\r\n        description: `A private orginization oriented towards building software products for security management,\r\n         with a small team of around 30+ members, helped me expand my horizon over professional and trending \r\n         technologies to build reliable solutions to adhere with customer needs.`\r\n    }],\r\n    'Education': [\r\n        {\r\n            year: '2013 - 2017',\r\n            name: `Pune Vidyarti Griha's College of Engineering and Technology, Pune`,\r\n            description: `A private orginization oriented towards building software products for security management,\r\n                with a small team of around 30+ members, helped me expand my horizon over professional and\r\n                trending technologies to build reliable solutions to adhere with customer needs.`,\r\n        },\r\n        {\r\n            year: '2011 - 2013',\r\n            name: 'Vishwakarma Institue of Technology, Pune',\r\n            description: `Jr. College, where for the first time, I was introducted to HTML and CSS, and ended up rooting\r\n                me in web development industry.\r\n                A life full of adventure and awesome friends that always do the most craziest things you could imagine`\r\n        },\r\n        {\r\n            year: '2000 - 2011',\r\n            name: 'Shri Sharda English Medium School, Ahmednaga',\r\n            description: 'My School'\r\n        }\r\n    ]\r\n}\r\n\r\nconst Resume = () => (\r\n    <div>\r\n        <Grid>\r\n            <Cell col={4}>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <img\r\n                        src=\"https://www.shareicon.net/download/2015/09/18/103157_man_512x512.png\"\r\n                        alt=\"avatar\"\r\n                        style={{ height: '200px' }}\r\n                    />\r\n                </div>\r\n                <h2 style={{ paddinTop: '2em' }}>Ritesh Firodiya</h2>\r\n                <h4 style={{ color: 'grey' }}>Programmer</h4>\r\n                <hr style={{ borderTop: '3px solid #833fb2', width: '50%' }} />\r\n                <p>\r\n                    A Passionate Web Developer, interested in all the shit in\r\n                    this world and having a desire to explore every corner of the world.\r\n                    </p>\r\n                <hr style={{ borderTop: '3px solid #833fb2', width: '50%' }} />\r\n                <h5>Address</h5>\r\n                <p>Flat No. 403, Shri Niwas, Vasant-Vastu, Maharshi Nagar, Pune, Maharashtra, India</p>\r\n                <h5>Phone</h5>\r\n                <p>(+91) 9226737797</p>\r\n                <h5>Email</h5>\r\n                <p>firodiya.ritesh@gmail.com</p>\r\n                <hr style={{ borderTop: '3px solid #833fb2', width: '50%' }} />\r\n            </Cell>\r\n            <Cell col={8} className=\"resume-right-col\">\r\n                <CustomGrid grids={grids} />\r\n            </Cell >\r\n        </Grid >\r\n    </div >\r\n)\r\n\r\nexport default Resume;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Dashboard from './components/Dashboard';\r\nimport AboutMePage from './components/AboutMe';\r\nimport ProjectsPage from './components/Projects';\r\nimport ResumePage from './components/Resume';\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Dashboard}> </Route>\r\n        <Route path=\"/aboutme\" component={AboutMePage}> </Route>\r\n        <Route path=\"/projects\" component={ProjectsPage}> </Route>\r\n        <Route path=\"/resume\" component={ResumePage}> </Route>\r\n    </Switch>\r\n)\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './route';\nimport { Link } from 'react-router-dom'\n\nimport { Layout, Header, Navigation, Content } from 'react-mdl';\n\n\nconst App = () => (\n  < div className=\"demo-big-content\" >\n    <Layout>\n      <Header className=\"header-color\" title={<Link to=\"/\" style={{textColor:'white'}}>Ritesh Firodiya </Link>} scroll>\n        <Navigation>\n          <Link to=\"/resume\">Resume</Link>\n          <Link to=\"/aboutme\">About Me</Link>\n          <Link to=\"/projects\">Projects</Link>\n        </Navigation>\n      </Header>\n      <Content>\n        <div className=\"page-content\" />\n        <Main />\n      </Content>\n    </Layout>\n  </div >\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}